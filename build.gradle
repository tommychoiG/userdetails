import static org.springframework.boot.gradle.SpringBootPluginExtension.LayoutType.*

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://nexus.ala.org.au/content/groups/public/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.1"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}

plugins {
    id "com.gorylenko.gradle-git-properties" version "1.4.17"
}

version "2.2.1-INAT-SNAPSHOT"
group "au.org.ala"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

apply from: 'https://raw.githubusercontent.com/AtlasOfLivingAustralia/travis-build-configuration/master/travis_grails_publish.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.3.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.3.Final"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.1"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    // Grails plugin dependencies

    runtime "org.grails.plugins:ala-bootstrap3:3.0.4"
    compile "org.grails.plugins:ala-ws-plugin:2.0"
    compile "org.grails.plugins:ala-auth:3.1.0"
    compile "org.grails.plugins:ala-admin-plugin:2.1"

    compile 'org.grails.plugins:external-config:1.1.1'
    compile 'org.grails.plugins:http-builder-helper:1.0.2.ALA'
    compile "org.grails.plugins:csv:1.0.ALA.3"
    compile 'org.grails.plugins:mail:2.0.0.RC6'
    compile "org.grails.plugins:oauth:4.0.0"
    compile "domurtag.plugins:grails-simple-captcha:1.0.0-grails3"
    compile "org.grails.plugins:export:2.0.0"
    compile 'org.grails.plugins:grails-markdown:3.0.0'
    compile 'org.grails.plugins:cache-ehcache:2.0.0.ALA'
//    compile 'org.grails.plugins:cache:4.0.0.RC1'
//    compile 'org.grails.plugins:cache-ehcache:3.0.0.M1'

    // regular JAR dependencies

    compile 'de.codecentric:spring-boot-admin-starter-client:1.5.3'

    runtime 'mysql:mysql-connector-java:5.1.42'
    testRuntime "com.h2database:h2"
    compile 'com.google.guava:guava:21.0'
    compile 'org.apache.httpcomponents:httpcore:4.3.3'
    compile 'org.apache.httpcomponents:httpclient:4.3.3'
    compile 'org.apache.httpcomponents:httpmime:4.3.3'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'commons-beanutils:commons-beanutils:1.8.3'
    compile 'org.mindrot:jbcrypt:0.4'

    compile 'org.grails.plugins:spring-session-helper:1.0'
    compile 'org.springframework.boot:spring-boot-starter-data-redis'
    compile 'org.springframework.session:spring-session-data-redis'

    // Spring Security to secure actuator endpoints
    compile 'org.springframework.security:spring-security-web'

    compile('org.webjars.bower:chosen:1.8.3')
    compile('org.webjars.bower:chosen-bootstrap:1.1.0') {
        exclude module: 'jquery' // dependency from skin
        exclude module: 'bootstrap' // dependency from skin
    }
}

springBoot {
    buildInfo()
    layout = WAR
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

bootRepackage {
    enabled = true
    executable = true
    classifier = 'exec'
}

assets {
    minifyJs = true
    minifyCss = true
}
